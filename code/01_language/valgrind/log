==3204== Memcheck, a memory error detector
==3204== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3204== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3204== Command: ./a.out
==3204== Parent PID: 1365
==3204== 
==3204== Use of uninitialised value of size 8
==3204==    at 0x109159: main (in /home/wsl/user/code/MyCode/code/01_language/valgrind/a.out)
==3204== 
==3204== Invalid read of size 1
==3204==    at 0x109159: main (in /home/wsl/user/code/MyCode/code/01_language/valgrind/a.out)
==3204==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3204== 
==3204== 
==3204== Process terminating with default action of signal 11 (SIGSEGV)
==3204==  Access not within mapped region at address 0x0
==3204==    at 0x109159: main (in /home/wsl/user/code/MyCode/code/01_language/valgrind/a.out)
==3204==  If you believe this happened as a result of a stack
==3204==  overflow in your program's main thread (unlikely but
==3204==  possible), you can try to increase the size of the
==3204==  main thread stack using the --main-stacksize= flag.
==3204==  The main thread stack size used in this run was 8388608.
==3204== 
==3204== HEAP SUMMARY:
==3204==     in use at exit: 0 bytes in 0 blocks
==3204==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==3204== 
==3204== All heap blocks were freed -- no leaks are possible
==3204== 
==3204== Use --track-origins=yes to see where uninitialised values come from
==3204== For lists of detected and suppressed errors, rerun with: -s
==3204== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
